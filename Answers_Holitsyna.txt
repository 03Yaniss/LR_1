1.Git – розподілена система керування версіями написана мовою С, командна оболонка на UNIX, Perl, Tcl, Python та C++. Це набір консольних утиліт, які відстежують і фіксують зміни в файлах (найчастіше мова йде про вихідний код програм, але можна використовувати його для будь-яких файлів)
2.Git має три основних стани, в яких можуть перебувати ваші файли: збережений у коміті (commited), змінений (modified) та індексований (staged):
Збережений у коміті означає, що дані безпечно збережено в локальній базі даних.
Змінений означає, що у файл внесено редагування, які ще не збережено в базі даних.
Індексований стан виникає тоді, коли ви позначаєте змінений файл у поточній версії, щоб ці зміни ввійшли до наступного знімку коміту.
3. Команда git add додає вміст робочої директорії в індекс (staging area) для подальшого комміта.  За замовчуванням git commit використовує лише цей індекс, так що ви можете використовувати git add для збірки зліпка вашого наступного комміта.
Для того щоб почати відстежувати (додати під версійність контроль) новий файл, використовується команда git add.
4. Команда git status показує стан файлів в робочій директорії та індексі: які файли змінено, але не додано в індекс;  які очікують комміта в індексі.  Додатково до цього виводяться підказки про те, як змінити стан файлів.
5. Команда git commit бере всі дані, додані в індекс за допомогою git add, і зберігає їх зліпок у внутрішній базі даних, а потім зрушує покажчик поточної гілки на цей зліпок.
6. Ініціалізація Git у папці проекту.
7.Коментар має бути корисним
Описуйте, що було змінено, де змінено, чому змінено.
Зазвичай 1-3 речень більш ніж достатньо.
Дотримуйтесь пунктуації, ставте крапку у кінці речення, починайте речення з великої букви.
8.Команда git log використовується для перегляду історії коммітов, починаючи з найсвіжішого та йдучи до витоків проекту.  За замовчуванням, вона показує лише історію поточної гілки, але може бути налаштована на висновок історії інших, навіть декількох відразу, гілок.  Також її можна використовувати для перегляду відмінностей між гілками на рівні коммітов. Ця команда використовується для демонстрації історії проекту.
9. Команда git checkout використовується для переключення гілок і вивантаження їх вмісту в робочу директорію.