1. В якому статусі можуть перебувати файли при роботі з Git?
При роботі з Git файли можуть перебувати у 3 станах:: змінений (modified), індексований (staged) і зафіксований (committed):  
1) До зміненого відносяться файли, які змінилися, але ще не були зафіксовані. 
2)  Індексований - це змінений файл в його поточної версії, зазначений для включення в наступний Ком. 
3)  Зафіксований означає, що файл вже збережено у локальній базі.

2. Для чого використовується команда add? 
Команда git add додає вміст робочого каталогу в індекс (staging area) для подальшого комміта.

3. Для чого використовується команда status? 
Команда git status показує стан файлів в робочому каталозі та індексі: які файли змінені, але не додані в індекс; які очікують комміта в індексі. Додатково до цього виводяться підказки про те, як змінити стан файлів.

4. Для чого використовується команда commit? 
Команда git commit бере всі дані, які додані в індекс за допомогою git add та зберігає їх зліпок у внутрішній базі даних, а потім зрушує покажчик поточної гілки на цей зліпок.

5. Для чого використовується команда init? 
Ця команда створює в поточному каталозі новий підкаталог з ім'ям .git, який містить всі необхідні файли репозиторія - структуру Git репозиторія.

6. Що необхідно писати в коментарях комітів? 
До коммітів обов'язково треба писати коментарі. Зазвичай, рекомендують коротко (до 50-ти символів) описати суть вирішеної підзадачі. Так можна полегшити подальший розбір. 
 
Якщо в 50 символів не вдалося вкластися, рекомендують робити короткий заголовок, порожній рядок, і потім писати вже детальний текст. Git розуміє що таке заголовки в коментарях і буде показувати тільки їх в історії. Якщо буде потрібно докладний опис коммітів, то його завжди можна буде прочитати.

7. Для чого використовується команда checkout? 
У Git під терміном checkout мається на увазі переключення між різними версіями цільового об'єкта.  Команда git checkout дозволяє переміщатися між гілками, створеними командою git branch. При переключенні гілки відбувається оновлення файлів в робочому каталозі відповідно до версії, що зберігається в цій гілці, а Git починає записувати всі нові комміти в цій гілці.
Команда git checkout може бути також використана для створення гілок.

8. Для чого використовується команда reset? 
Команда git reset використовується в основному для скасування змін. Вона змінює покажчик HEAD і, опціонально, стан індексу. Також ця команда може змінити файли в робочому каталозі при використанні параметра --hard, що може привести до втрати напрацювань при неправильному використанні.

9. Для чого використовується команда log? 
За замовчуванням (без аргументів) git log перераховує комміти, зроблені в репозиторії в зворотному до хронологічного порядку - останні комміти знаходяться вгорі. Тобто найостанніші комміти показуються першими.

10.Для чого використовується команда status? 
Команда git status показує стан файлів в робочому каталозі та індексі: які файли змінені, але не додані в індекс; які очікують комміта в індексі. Додатково до цього виводяться підказки про те, як змінити стан файлів.

11.Як відновити кілька файлів з попередньо створеного коміта? 
Git дозволяє повертати будь-який обраний файл у стан, який був в деякому коміті. Це робиться за допомогою команди git checkout, яку ми використовували раніше для переходу між гілками. Вона також може бути використана для переходу між комітами (досить часто у git одна команда може робити багато не спільних між собою функцій).

12.Як перейди до попереднього коміта по імені? 
Це робиться за допомогою команди git checkout. Для цього ми повинні знати ID коміту до якого ми хочемо повернутися, а також повний шлях до нашого файлу.

13.Як створити нову гілку? 
Щоб створити гілку і відразу переключитися на неї, можна виконати команду git checkout з параметром –b

14.Як перейти на нову гілку? 
Щоб переключитися на нову гілку в Git використовується команда git checkout. Наприклад, щоб переключитися на гілку new_branch необхідно виконати команду: 
 git checkout new_branch

15.Як перейти на основну гілку? 
Щоб переключитися на основну гілку в Git використовується команда: 
 git checkout master

16.Як виконати злиття гілок?
Злиття використовується в Git, щоб зібрати воєдино розгалужену історію. Команда git merge виконує злиття окремих напрямків розробки, створених за допомогою команди git branch, в єдину гілку.
